
"Replay last macro by typing enter
nnoremap <Enter> @@
if has('nvim')
   "Using xclip for better clipboard integration:
   "https://github.com/neovim/neovim/issues/6097
    set clipboard+=unnamedplus
    let g:os = substitute(system('uname -a'), '\n', '', '')
    if g:os =~ "Microsoft"
       "WSL detected, we need to do some weirdness to interact
       " with the system clipboard ...
       "Figured this out by looking at this:
       " https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim
       let g:clipboard = {
             \   'name': 'myClipboard',
             \   'copy': {
             \      '+': 'nvimCopy.sh',
             \      '*': 'nvimCopy.sh',
             \    },
             \   'paste': {
             \      '+': "nvimPaste.sh",
             \      '-': "nvimPaste.sh",
             \   },
             \   'cache_enabled': 1,
             \ }
    endif

    "Use Escape to exit terminal "insert" mode
    tnoremap <Esc> <C-\><C-n>

    "Meta-[ will send escape to terminal
    tnoremap <M-[> <Esc>
endif

"clang-format.py is provided by the 'clang-format' package
map <C-Y> :py3f /usr/share/vim/addons/syntax/clang-format.py<cr>
imap <C-Y> <c-o>:py3f /usr/share/vim/addons/syntax/clang-format.py<cr>

"https://superuser.com/questions/77800/vims-autocomplete-how-to-prevent-vim-to-read-some-include-files
set include=^\\s*#\\s*include\ \\(<boost/\\)\\@!

"Higher contrast colorscheme
" colorscheme darkblue
" colorscheme murphy "too green
" colorscheme wombat "sucks with python
colorscheme inkpot

"Limit the control-p scanned files (otherwise vim can hang)
let g:ctrlp_max_files = 10000
" Set the MRU option as the default ctrl-p mode
let g:ctrlp_cmd = 'CtrlPMRU'

" Open files in the current pane
let g:ctrlp_reuse_window = 'nerdtree'
let g:ctrlp_switch_buffer = ''

"Remove hard-to-read highlights
" hi clear SpellBad
" " SpellBad cterm=underline  ctermfg=red
" hi SpellBad cterm=underline

"YouCompleteMe shortcuts
nnoremap <leader>jj :YcmCompleter GoTo<CR>
nnoremap <leader>ji :YcmCompleter GoToInclude<CR>
nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>
nnoremap <leader>jt :YcmCompleter GetType<CR>
nnoremap <leader>jp :YcmCompleter GetParent<CR>
nnoremap <leader>jD :YcmCompleter GetDoc<CR>
nnoremap <leader>jF :YcmCompleter FixIt<CR>
"Not available in C/C++ :(
nnoremap <leader>jr :YcmCompleter GoToReferences<CR>

set textwidth=110
